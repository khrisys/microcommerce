spring.application.name=microservice-produits

#Eureka : trouver toutes les instances de tous les MS existants et les faire communiuqer automatiquement entre elles
#eureka.client.serviceUrl.defaultZone: http://localhost:9102/eureka/
eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/

# ACTUATOR - DEBUG
# liste des endpoints de actuator exposés pour le debug
management.endpoints.web.exposure.include=*
# Info sur le MS (eventuellement recupéré par actuator pour le debug)
info.app.version=1.0-Beta
#url qui va permettre de checker le health du MS. cette url est important car elle va permettre à springadmin de savoir si ce
# MS est en marche ou pas
#eureka.instance.health-check-url-path= /actuator/health

#SERVER-CONFIG
# 1 - Pour récupérer automatiquement les fichiers de  configurations du serveur de configuration, il suffit d’ajouter le starter
# "spring-cloud-starter-config" dans les dependances et de renommer "application.properties" en "bootstrap.properties".
# 2 - Indiquer au MS où se trouve le serveur de configuration (le port est de 9101 parce que le serveur de config a été mis sur ce
# port. Le MS est maintenant lié avec le github. Or, ce sont les fichiers de conf qui sont dans github qui congifurent tous les MS
#spring.cloud.config.uri=http://localhost:9101


#server.port 9001
#
#Configurations H2
spring.jpa.show-sql=true
spring.h2.console.enabled=true

#défini l'encodage pour data.sql
spring.datasource.sql-script-encoding=UTF-8

#Nos configurations

mes-configs.limiteDeProduits= 4


